# 선문대학교 통합도서정보관리 시스템

## 시스템 개요
본 프로젝트는 도서관 관리를 위한 클라이언트-서버 기반 도서정보관리 시스템입니다.
사용자 계정 관리, 도서 정보 검색/추가/수정/삭제 및 정렬/랭킹 기능을 제공합니다.

## 파일 구조

### 도서 관리 모듈
- **book.h**: 
  - 도서 정보 BOOK 구조체 정의 (ID, 제목, 저자, 평점)
  - MAX_BOOKS 상수 정의 (최대 700권)
  - 도서 관련 함수 선언 (파일 로드/저장, 검색, 정렬, 메모리 관리)

- **book.c**: 
  - 도서 정보 동적 할당 및 해제 함수 구현 (createNewBook, freeAllBooks)
  - 파일에서 도서 데이터 로드 (loadBooksFromFile)
  - 검색 및 정렬 로직 구현 (searchBooks, sortBooks)
  - 유틸리티 함수 구현 (toLowerCase)

- **book_command.h/c**: 
  - 클라이언트-서버 도서 관련 요청 처리 인터페이스
  - 지원 명령어: SEARCH, ADD, DELETE_BOOK, UPDATE, FIND_BOOK, SORT, RANK
  - 요청 처리 후 결과를 응답 버퍼에 저장

- **book_menu.h/c**: 
  - 사용자 인터페이스: 도서관리 메뉴 구현
  - 기능: 검색, 추가, 삭제, 수정, 정렬, 평점 랭킹
  - 페이지네이션 처리 및 결과 출력 관리

### 사용자 관리 모듈
- **user.h**: 
  - 사용자 정보 USER 구조체 정의 (ID, 비밀번호)
  - MAX_USERS 상수 정의 (최대 100명)
  - 사용자 관련 함수 선언 (로그인, 회원가입, 수정, 삭제)

- **user.c**: 
  - 사용자 인증 및 계정 관리 기능 구현
  - 사용자 정보 파일 로드/저장 (loadUsersFromFile, saveUsersToFile)
  - ID 검색 및 인덱스 조회 (findUserIndex)

- **user_command.h/c**: 
  - 클라이언트-서버 사용자 관련 요청 처리
  - 지원 명령어: LOGIN, REGISTER, DELETE, FIND, MODIFY
  - 요청 분석 및 처리 후 응답 생성

- **user_menu.h/c**: 
  - 사용자 메뉴 UI 구현
  - 기능: 로그인, 회원가입, 삭제, 조회, 비밀번호 수정
  - 프로그램 종료 및 도서 메뉴 연계 기능

### 공통 및 통신 모듈
- **common_input.h/c**: 
  - 여러 메뉴에서 공통으로 사용하는 입력 처리 함수
  - 화면 초기화 (clearScreen)
  - ESC 키로 취소 가능한 입력 함수 (getEscapableInput)
  - 비밀번호 마스킹(*) 기능

- **bmserver.c**: 
  - 서버 메인 프로그램
  - 소켓 통신 설정 및 클라이언트 연결 관리
  - 클라이언트 요청 분석 및 명령 처리
  - 결과 응답 및 로깅

- **bmclient.c**: 
  - 클라이언트 메인 프로그램
  - 서버 연결 및 사용자 메뉴 진입
  - 프로그램 종료 처리

### 데이터 파일
- **booklist2.txt**: 
  - 도서 정보 저장 (탭으로 구분된 ID, 제목, 저자, 평점)
  - 서버 시작 시 로드되고 변경 시 자동 저장

- **users.txt**: 
  - 사용자 정보 저장 (콜론으로 구분된 ID, 비밀번호)
  - 서버 시작 시 로드되고 변경 시 자동 저장

## 시스템 실행 방법
1. 먼저 서버를 실행합니다: `bmserver.exe`
2. 클라이언트를 실행합니다: `bmclient.exe`
3. 클라이언트에서 로그인하거나 회원가입 후 도서 관리 기능을 이용합니다.

## 주요 기능
- 사용자 관리: 로그인, 회원가입, 계정 삭제, 비밀번호 수정
- 도서 관리: 검색, 추가, 삭제, 수정
- 정렬 및 랭킹: 제목, 저자, 평점별 정렬 및 상위 도서 랭킹 확인
- 페이지네이션: 대량의 도서 목록을 페이지 단위로 확인